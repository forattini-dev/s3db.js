services:
  s3db-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: s3db-mcp-server:latest
    container_name: s3db-mcp-server
    restart: unless-stopped
    env_file:
      - path: .env
        required: false # Makes the file optional
    environment:
      # Server configuration
      - NODE_ENV=${NODE_ENV:-production}
      - MCP_SERVER_HOST=${MCP_SERVER_HOST:-0.0.0.0}
      - MCP_SERVER_PORT=${MCP_SERVER_PORT:-17500}
      - MCP_TRANSPORT=${MCP_TRANSPORT:-sse}
      
      # S3DB configuration
      - S3DB_CONNECTION_STRING=${S3DB_CONNECTION_STRING}
      - S3DB_VERBOSE=${S3DB_VERBOSE:-false}
      - S3DB_PARALLELISM=${S3DB_PARALLELISM:-10}
      - S3DB_PASSPHRASE=${S3DB_PASSPHRASE:-secret}
      - S3DB_VERSIONING_ENABLED=${S3DB_VERSIONING_ENABLED:-false}
      
      # Plugin configuration
      - S3DB_COSTS_ENABLED=${S3DB_COSTS_ENABLED:-true}
      - S3DB_CACHE_ENABLED=${S3DB_CACHE_ENABLED:-true}
      - S3DB_CACHE_DRIVER=${S3DB_CACHE_DRIVER:-memory}
      - S3DB_CACHE_MAX_SIZE=${S3DB_CACHE_MAX_SIZE:-1000}
      - S3DB_CACHE_TTL=${S3DB_CACHE_TTL:-300000}
      - S3DB_CACHE_DIRECTORY=${S3DB_CACHE_DIRECTORY:-./cache}
      - S3DB_CACHE_PREFIX=${S3DB_CACHE_PREFIX:-s3db}
      
      # AWS credentials (optional if using IAM roles)
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      
      # S3-compatible endpoints (MinIO, DigitalOcean, etc.)
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE:-false}
    ports:
      - "${MCP_SERVER_PORT:-17500}:8000"
    volumes:
      # Mount for configuration files if needed
      - type: bind
        source: ./config
        target: /app/config
      # Mount cache directory for filesystem cache persistence
      - type: bind
        source: ./cache-data
        target: /app/cache
        bind:
          create_host_path: true
    networks:
      - s3db-mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: LocalStack for local S3 testing
  localstack:
    image: localstack/localstack:3.8
    container_name: s3db-localstack
    restart: unless-stopped
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=us-east-1
    ports:
      - "17566:4566"
      - "17510-17559:4510-4559"
    volumes:
      - "localstack-data:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - s3db-mcp-network
    profiles:
      - local-testing

  # Optional: MinIO for local S3-compatible testing
  minio:
    image: minio/minio:latest
    container_name: s3db-minio
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    ports:
      - "17998:9000"
      - "17999:9001"
    volumes:
      - "minio-data:/data"
    networks:
      - s3db-mcp-network
    profiles:
      - local-testing

networks:
  s3db-mcp-network:
    driver: bridge

volumes:
  localstack-data:
    driver: local
  minio-data:
    driver: local