name: CI (Fast)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Cancel previous runs on same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Type Check
        run: pnpm run test:ts
        continue-on-error: true

      - name: Summary
        if: always()
        run: |
          echo "## Code Quality Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Build: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript: OK" >> $GITHUB_STEP_SUMMARY

  test:
    name: Tests (Node 22)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Start MinIO
        run: |
          docker run -d \
            --name minio \
            -p 9000:9000 \
            -e MINIO_ROOT_USER=minioadmin \
            -e MINIO_ROOT_PASSWORD=minioadmin123 \
            minio/minio:latest \
            server /data --quiet

          timeout 30s bash -c 'until curl -sf http://localhost:9000/minio/health/live; do sleep 1; done'

          docker run --rm --network="host" \
            -e AWS_ACCESS_KEY_ID=minioadmin \
            -e AWS_SECRET_ACCESS_KEY=minioadmin123 \
            amazon/aws-cli \
            --endpoint-url http://localhost:9000 \
            s3 mb s3://s3db 2>/dev/null || true

      - name: Build
        run: pnpm run build

      - name: Run Tests
        run: pnpm test
        env:
          AWS_ACCESS_KEY_ID: minioadmin
          AWS_SECRET_ACCESS_KEY: minioadmin123
          AWS_ENDPOINT: http://localhost:9000
          AWS_REGION: us-east-1
          AWS_BUCKET: s3db
          AWS_FORCE_PATH_STYLE: true
          BUCKET_CONNECTION_STRING: s3://minioadmin:minioadmin123@s3db?endpoint=http://localhost:9000&region=us-east-1&forcePathStyle=true

      - name: Summary
        if: always()
        run: |
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "All tests passed on Node.js 22" >> $GITHUB_STEP_SUMMARY
          else
            echo "Tests failed - check logs above" >> $GITHUB_STEP_SUMMARY
          fi

  # Status check for branch protection
  ci-status:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [quality, test]
    if: always()

    steps:
      - name: Check Status
        run: |
          if [ "${{ needs.quality.result }}" != "success" ] || [ "${{ needs.test.result }}" != "success" ]; then
            echo "CI Failed"
            echo "- Quality: ${{ needs.quality.result }}"
            echo "- Tests: ${{ needs.test.result }}"
            exit 1
          fi
          echo "CI Passed"
