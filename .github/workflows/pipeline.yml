name: pipeline

on:
  push:
    branches: [main, develop]
  deployment:
  release:
    types: [created]
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    name: Test Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 23, 24]
      fail-fast: false

    services:
      minio:
        image: bitnami/minio:latest
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin123
          MINIO_DEFAULT_BUCKETS: s3db
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Wait for MinIO to be ready
        run: |
          echo "Waiting for MinIO to be ready..."
          timeout 60s bash -c 'until curl -f http://localhost:9000/minio/health/live; do sleep 2; done'
          echo "MinIO is ready!"

      - name: Run tests
        run: pnpm test
        env:
          AWS_ACCESS_KEY_ID: minioadmin
          AWS_SECRET_ACCESS_KEY: minioadmin123
          AWS_ENDPOINT: http://localhost:9000
          AWS_REGION: us-east-1
          AWS_BUCKET: s3db
          AWS_FORCE_PATH_STYLE: true
          BUCKET_CONNECTION_STRING: s3://minioadmin:minioadmin123@s3db

      - name: Run build
        run: pnpm run build
      
      - name: Upload coverage to Qlty
        uses: qltysh/qlty-action/coverage@v1
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: coverage/lcov.info
