name: 🚀 Release & Build Binaries

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.2.3)'
        required: true
        default: 'v11.3.2'

jobs:
  # Job 1: Test and Build
  test-and-build:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📥 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build Package
        run: pnpm run build

      - name: 🧪 Run Tests
        run: pnpm run test:quick
        timeout-minutes: 8

      - name: 🔍 TypeScript Check
        run: pnpm run test:ts

      - name: 📤 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  # Job 2: Build Binaries (Matrix for multiple platforms)
  build-binaries:
    name: 🔨 Build ${{ matrix.platform }} Binary
    needs: test-and-build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-x64
          - os: macos-13  # Intel Mac
            platform: macos-x64
          - os: macos-14  # Apple Silicon
            platform: macos-arm64
          - os: windows-latest
            platform: win-x64

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📥 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 📥 Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: 🔨 Build Binaries
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            bash ./scripts/scripts/build-binaries.sh
          else
            ./scripts/scripts/build-binaries.sh
          fi
        shell: bash

      - name: 📤 Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.platform }}
          path: bin/standalone/
          retention-days: 1

  # Job 3: Create Release
  create-release:
    name: 🎉 Create GitHub Release
    needs: [test-and-build, build-binaries]
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📥 Download All Binary Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          path: all-binaries/
          merge-multiple: true

      - name: 🏷️ Get Version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: 📋 List Binary Files
        run: |
          echo "📦 Built binaries:"
          find all-binaries/ -type f -exec ls -lh {} \;

      - name: 📝 Generate Release Notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOF'
          ## 🚀 S3DB.js ${{ steps.version.outputs.VERSION }}

          ### 📦 Installation

          **NPM Package:**
          ```bash
          npm install s3db.js@${{ steps.version.outputs.VERSION_NUMBER }}
          ```

          **Standalone Binaries (No Node.js required):**
          Download the appropriate binary for your platform below.

          ### 🎯 Binaries Included

          - ✅ **s3db-linux-x64** - Linux 64-bit standalone
          - ✅ **s3db-macos-x64** - macOS Intel standalone
          - ✅ **s3db-macos-arm64** - macOS Apple Silicon standalone
          - ✅ **s3db-win-x64.exe** - Windows 64-bit standalone
          - ✅ **s3db-mcp-\*** - MCP Server variants for all platforms

          ### 🔧 Usage

          **CLI:**
          ```bash
          # Linux/macOS
          chmod +x s3db-linux-x64
          ./s3db-linux-x64 --help

          # Windows
          s3db-win-x64.exe --help
          ```

          **MCP Server:**
          ```bash
          ./s3db-mcp-linux-x64 --transport=sse --port=8000
          ```

          ### 📚 Documentation

          - [📖 Main Documentation](https://github.com/forattini-dev/s3db.js)
          - [🔧 CLI Usage](https://github.com/forattini-dev/s3db.js#cli-usage)
          - [🔗 MCP Integration](https://github.com/forattini-dev/s3db.js#mcp-server)
          EOF

      - name: 🎉 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: "s3db.js ${{ steps.version.outputs.VERSION }}"
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            all-binaries/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Release Summary
        run: |
          echo "## 🎉 Release Created!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "**Binaries:** $(find all-binaries/ -type f | wc -l) files" >> $GITHUB_STEP_SUMMARY
          echo "**Total Size:** $(du -sh all-binaries/ | cut -f1)" >> $GITHUB_STEP_SUMMARY

  # Job 4: Publish to NPM
  publish-npm:
    name: 📦 Publish to NPM
    needs: [test-and-build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: 📥 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 📥 Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: 🔍 Verify Package
        run: |
          echo "📦 Package contents:"
          npm pack --dry-run 2>/dev/null | head -30 || echo "✅ Package OK"

      - name: 📤 Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
