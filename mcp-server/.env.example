# ==============================================================================
# S3DB MCP Server Configuration
# ==============================================================================

# Server Configuration
NODE_ENV=development
MCP_SERVER_HOST=0.0.0.0
MCP_SERVER_PORT=8000
MCP_TRANSPORT=sse

# ==============================================================================
# S3DB Database Configuration
# ==============================================================================

# Primary S3DB connection string
# Format: s3://ACCESS_KEY:SECRET_KEY@BUCKET_NAME/database/path
# Example: s3://AKIAIOSFODNN7EXAMPLE:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY@my-s3db-bucket/databases/production
S3DB_CONNECTION_STRING=s3://YOUR_ACCESS_KEY:YOUR_SECRET_KEY@YOUR_BUCKET/databases/development

# S3DB Options
S3DB_VERBOSE=false
S3DB_PARALLELISM=10
S3DB_PASSPHRASE=your-encryption-passphrase
S3DB_VERSIONING_ENABLED=false

# Plugin Configuration
S3DB_COSTS_ENABLED=true              # Enable automatic S3 costs tracking
S3DB_CACHE_ENABLED=true              # Enable cache for performance
S3DB_CACHE_DRIVER=memory             # Cache driver: 'memory' or 'filesystem'
S3DB_CACHE_MAX_SIZE=1000             # Maximum items in memory cache (memory driver only)
S3DB_CACHE_TTL=300000                # Cache TTL in milliseconds (5 minutes)
S3DB_CACHE_DIRECTORY=./cache         # Directory for filesystem cache (filesystem driver only)
S3DB_CACHE_PREFIX=s3db               # Prefix for cache files (filesystem driver only)

# ==============================================================================
# AWS Configuration
# ==============================================================================

# AWS Credentials (required unless using IAM roles)
AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
AWS_SESSION_TOKEN=
AWS_REGION=us-east-1

# ==============================================================================
# S3-Compatible Services (MinIO, DigitalOcean Spaces, etc.)
# ==============================================================================

# Uncomment and configure for S3-compatible services
# S3_ENDPOINT=http://localhost:9000
# S3_FORCE_PATH_STYLE=true

# MinIO specific (for local testing)
# S3_ENDPOINT=http://minio:9000
# MINIO_ROOT_USER=minioadmin
# MINIO_ROOT_PASSWORD=minioadmin

# DigitalOcean Spaces example
# S3_ENDPOINT=https://nyc3.digitaloceanspaces.com
# S3_FORCE_PATH_STYLE=false

# ==============================================================================
# Development & Testing
# ==============================================================================

# LocalStack configuration (for local AWS testing)
# S3_ENDPOINT=http://localhost:4566
# S3_FORCE_PATH_STYLE=true

# Debug options
DEBUG=false
LOG_LEVEL=info

# ==============================================================================
# Example Connection Strings for Different Providers
# ==============================================================================

# AWS S3 (with credentials in connection string)
# S3DB_CONNECTION_STRING=s3://ACCESS_KEY:SECRET_KEY@bucket-name/databases/myapp

# AWS S3 (using IAM roles - no credentials needed)
# S3DB_CONNECTION_STRING=s3://bucket-name/databases/myapp

# MinIO local development
# S3DB_CONNECTION_STRING=s3://minioadmin:minioadmin@test-bucket/databases/dev?endpoint=http://localhost:9000&forcePathStyle=true

# DigitalOcean Spaces
# S3DB_CONNECTION_STRING=s3://DO_ACCESS_KEY:DO_SECRET_KEY@space-name/databases/prod?endpoint=https://nyc3.digitaloceanspaces.com

# LocalStack (local AWS simulation)
# S3DB_CONNECTION_STRING=s3://test:test@test-bucket/databases/local?endpoint=http://localhost:4566&forcePathStyle=true

# ==============================================================================
# Security Notes
# ==============================================================================

# IMPORTANT SECURITY CONSIDERATIONS:
# 1. Never commit real credentials to version control
# 2. Use IAM roles when possible instead of access keys
# 3. Rotate credentials regularly
# 4. Use least-privilege access policies
# 5. Enable S3 bucket encryption and versioning
# 6. Monitor access logs and CloudTrail events
# 7. Use strong passphrases for S3DB encryption

# ==============================================================================
# Production Recommendations
# ==============================================================================

# For production environments:
# - Use IAM roles instead of access keys when possible
# - Enable S3DB versioning for data protection
# - Use environment-specific bucket names
# - Enable comprehensive logging
# - Set up monitoring and alerting
# - Use encrypted connections (HTTPS)
# - Implement backup strategies